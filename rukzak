def rukzak(a, ves, zсennost, n):
    K = [[0 for x in range(a + 1)] for x in range(n + 1)]
    for i in range(n + 1):
        for w in range(a + 1):
            if i == 0 or w == 0:
                K[i][w] = 0
            elif ves[i - 1] <= w:
                K[i][w] = max(zсennost[i - 1][0] + K[i - 1][w - ves[i - 1]], K[i - 1][w])
            else:
                K[i][w] = K[i - 1][w]
    return K


vechi = {'в': (3, 25, 0),
             'п': (2, 15),
             'б': (2, 15),
             'а': (2, 20),
             'н': (1, 15),
             'т': (3, 20),
             'о': (1, 25),
             'ф': (1, 15),
             'д': (1, 10),
             'к': (2, 20),
             'р': (2, 20)
             }

backpack = {}


J = []
I = []
for key in vechi:
    J.append([vechi[key][1], key])
    I.append(vechi[key][0])

a = 9
n = len(J)
K = rukzak(a, I, J, n)


w, i, oll_ves = a, n, 0
res = K[n][a]
while i > 0 and res > 0:
    if res != K[i - 1][w]:
        backpack[J[i - 1][1]] = [J[i - 1][0], I[i - 1]]
        vechi.pop(J[i - 1][1])
        oll_ves += I[i - 1]
        res -= J[i - 1][0]
        w -= I[i - 1]
    i -= 1


L = 0
for key in backpack:
    for k in range(backpack[key][1]):
        if L == 2:
            print("\b\b")
            L = 0
        print(key, end=', ')
        L += 1

start = 15
s = 0
for key in vechi:
    s += vechi[key][1]
print(' ')
itog = K[n][a] - s + start
print("Итоговые очки выживания: ", itog)
if itog > 0:
    print('Том будет жить')
else:
    ('Том умирает')
